}
loadMultipleFiles(nmonth = c("Dec","Nov"))
for (k in 1:totalIterate) {
browser()
assign(names(files_list)[k], as.data.frame(files_list[[k]]))
browser()
}
undebug(ls)
source("select_files_to_read.R")
# select_files_to_read("Dec", 2019)
myexport <- function(...) {
arg.list <- list(...)
names <- all.names(match.call())[-1]
for (i in seq_along(names)) assign(names[i],arg.list[[i]],.GlobalEnv)
}
loadMultipleFiles <- function(nmonth = c("Dec"), nyear = c(2019)) {
files_list <- list()
year <- 1:length(nyear)
totalIterate <<- length(nmonth) * length(nyear)
for (i in year) {
# browser()
month <- 1:length(nmonth)
for (j in month) {
# browser()
select_files_to_read(nmonth[j], nyear[i])
files_list[[j]] <- tempfilename
names(files_list)[j] <- xlsname
# browser()
}
}
return(files_list)
}
loadMultipleFiles(nmonth = c("Dec","Nov"))
for (k in 1:totalIterate) {
# browser()
assign(names(files_list)[k], as.data.frame(files_list[[k]]))
# browser()
}
loadMultipleFiles(nmonth = c("Dec","Nov"))
browser()
undebug()
source("select_files_to_read.R")
# select_files_to_read("Dec", 2019)
myexport <- function(...) {
arg.list <- list(...)
names <- all.names(match.call())[-1]
for (i in seq_along(names)) assign(names[i],arg.list[[i]],.GlobalEnv)
}
loadMultipleFiles <- function(nmonth = c("Dec"), nyear = c(2019)) {
files_list <- list()
year <- 1:length(nyear)
totalIterate <<- length(nmonth) * length(nyear)
for (i in year) {
# browser()
month <- 1:length(nmonth)
for (j in month) {
# browser()
select_files_to_read(nmonth[j], nyear[i])
files_list[[j]] <- tempfilename
names(files_list)[j] <- xlsname
# browser()
}
browser()
}
return(files_list)
}
loadMultipleFiles(nmonth = c("Dec","Nov"))
browser()
for (k in 1:totalIterate) {
# browser()
assign(names(files_list)[k], as.data.frame(files_list[[k]]))
# browser()
}
undebug()
undebug(ls)
nyear <- c(2019)
nmonth <- c("a","b")
year <- 1:length(nyear)
month <- 1:length(nmonth)
for (i in year) {
for (j in month) {
print(i,j)
}
}
nyear <- c(2019,2020)
nmonth <- c("a","b")
year <- 1:length(nyear)
month <- 1:length(nmonth)
for (i in year) {
for (j in month) {
print(i,j)
}
}
for (i in year) {
for (j in month) {
print(i + j)
}
}
nyear <- c(2019)
year <- 1:length(nyear)
year <- as.numeric(1:length(nyear))
for (i in year) {
for (j in month) {
print(i + j)
}
}
nyear <- c(2019)
nmonth <- c("a")
year <- as.numeric(1:length(nyear))
month <- 1:length(nmonth)
for (i in year) {
for (j in month) {
print(i + j)
}
}
nyear <- c(2019,2020)
nmonth <- c("a")
year <- as.numeric(1:length(nyear))
month <- 1:length(nmonth)
for (i in year) {
for (j in month) {
print(i + j)
}
}
nyear <- c(2019)
nmonth <- c("a")
year <- as.numeric(1:length(nyear))
source('~/.active-rstudio-document', echo=TRUE)
loadMultipleFiles(nmonth = c("Dec","Nov"))
browser()
for (k in 1:totalIterate) {
# browser()
assign(names(files_list)[k], as.data.frame(files_list[[k]]))
# browser()
}
?break
source("select_files_to_read.R")
# select_files_to_read("Dec", 2019)
myexport <- function(...) {
arg.list <- list(...)
names <- all.names(match.call())[-1]
for (i in seq_along(names)) assign(names[i],arg.list[[i]],.GlobalEnv)
}
loadMultipleFiles <- function(nmonth = c("Dec"), nyear = c(2019)) {
files_list <- list()
year <- 1:length(nyear)
month <- 1:length(nmonth)
totalIterate <<- length(nmonth) * length(nyear)
for (i in year) {
if (length(year) == 1) {
for (j in month) {
select_files_to_read(nmonth[j], nyear)
files_list[[j]] <- tempfilename
names(files_list)[j] <- xlsname
}
break
}
for (j in month) {
# browser()
select_files_to_read(nmonth[j], nyear[i])
files_list[[j]] <- tempfilename
names(files_list)[j] <- xlsname
# browser()
}
# browser()
}
return(files_list)
}
loadMultipleFiles(nmonth = c("Dec","Nov"))
browser()
for (k in 1:totalIterate) {
# browser()
assign(names(files_list)[k], as.data.frame(files_list[[k]]))
# browser()
}
loadMultipleFiles(nmonth = c("Dec","Nov"))
# browser()
for (k in 1:totalIterate) {
# browser()
assign(names(files_list)[k], as.data.frame(files_list[[k]]))
# browser()
}
loadMultipleFiles(nmonth = c("Dec","Nov"))
source("select_files_to_read.R")
# select_files_to_read("Dec", 2019)
myexport <- function(...) {
arg.list <- list(...)
names <- all.names(match.call())[-1]
for (i in seq_along(names)) assign(names[i],arg.list[[i]],.GlobalEnv)
}
loadMultipleFiles <- function(nmonth = c("Dec"), nyear = c(2019)) {
files_list1 <- list()
year <- 1:length(nyear)
month <- 1:length(nmonth)
totalIterate <<- length(nmonth) * length(nyear)
for (i in year) {
if (length(year) == 1) {
for (j in month) {
select_files_to_read(nmonth[j], nyear)
files_list1[[j]] <- tempfilename
names(files_list1)[j] <- xlsname
}
break
}
for (j in month) {
# browser()
select_files_to_read(nmonth[j], nyear[i])
files_list1[[j]] <- tempfilename
names(files_list1)[j] <- xlsname
# browser()
}
# browser()
}
files_list <<- files_list1
}
loadMultipleFiles(nmonth = c("Dec","Nov"))
# browser()
for (k in 1:totalIterate) {
# browser()
assign(names(files_list)[k], as.data.frame(files_list[[k]]))
# browser()
}
loadMultipleFiles(nmonth = c("Dec","Nov","Oct","Sep","Aug","Jul","Jun","May","Apr","Mar","Feb","Jan"))
# browser()
for (k in 1:totalIterate) {
# browser()
assign(names(files_list)[k], as.data.frame(files_list[[k]]))
# browser()
}
rm(files_list)
rm(files_list, tempfilename)
head(Apr2019)
colnames(Apr2019)
ls()
ls("2019")
ls(".2019")
ls(".*2019")
ls("*2019")
ls("*.2019")
ls(pattern = ".*2019")
ls(pattern = "*2019")
ls(pattern = "2019")
totalDF <- ls(pattern = "2019")
get(totalDF[1])
Apr2019[1]
head(Apr2019[1])
head(Apr2019[1,1])
head(Apr2019[,1])
head(Apr2019[1,])
head(Apr2019[,1])
head(Apr2019[1])
length(April2019)
nrow(Apr2019)
tes <- Apr2019
nrow(tes)
tes[nrow(tes),] <- 1:7
nrow(tes)
tes[nrow(tes),1]
tes[nrow(tes),]
tes[nrow(tes)+1,] <- 1:7
nrow(tes)
tail(tes,2)
tail(tes,3)
library('lubridate')
head(tes,2)
tes$Month <- as.Date(tes$Month)
tes$Month <- as.Date(tes$Month, %y-%m)
tes[nrow(tes) + 1]
tes[nrow(tes)]
tes[nrow(tes),]
tes[nrow(tes),1]
a <- 1:10
b <- 11:20
c <- cbind(a,b)
c
d1 <- cbind(t(a),t(b))
d2 <- rbind(a,b)
d1
d2
tes_bind <- rbind(Dec2019, Nov2019)
head(tes_bind)
nrow(tes_bind) == nrow(Dec2019) + nrow(Nov2019)
head(Aug2019)
getDF <- get(totalDF)
5652+4750+4992+2099+1978+4684+4629+2110+4552+4915+4860+4794
totalDF
year2019 <- rbind(Apr2019, Aug2019, Dec2019, Feb2019, Jan2019, Jul2019, Jun2019, Mar2019, May2019, Nov2019, Oct2019, Sep2019)
str(year2019)
unique(year2019$Metro)
colnames(year2019$`Dimension Type`)
colnames(year2019)
colnames(year2019) <- c("Metro", "Dimension_Type", "Month", "Dimension", "Measure", "Value", "YoY")
colnames(year2019)
unique(year2019$Dimension_Type)
unique(year2019$Month)
unique(year2019$Dimension)
unique(year2019$Measure)
unique(year2019$Dimension)
unique(year2019$Dimension_Type)
unique(year2019$Metro)
?as.factor
year2019$Month <- as.Date.POSIXct(year2019$Month)
year2019$Month <- as.Date.POSIXlt(year2019$Month)
head(year2019$Month)
colnames(year2019) <- c("Metro", "Dimension_Type", "Year_Month", "Dimension", "Measure", "Value", "YoY")
head(year2019)
year(year2019$Month)
year2019$Year_Month <- sapply(year2019$Year_Month, as.Date(paste0(month,"-01")))
year2019$Year_Month <- sapply(year2019$Year_Month, as.Date(paste0(year2019$Year_Month,"-01")))
year2019$Year_Month <- year2019$Year_Month, as.Date(paste0(year2019$Year_Month,"-01"))
library('zoo')
install.packages('zoo')
library('zoo')
?as.Date.yearmon
year2019$Year_Month <- year2019$Year_Month, as.Date.yearmon(year2019$Year_Month)
year2019$Year_Month <- as.Date.yearmon(year2019$Year_Month)
traceback()
sapply(year2019$Year_Month, as.Date.yearmon)
traceback()
year2019$Year_Month
year2019$Year_Month[1]
year2019$Year_Month[1], as.Date.yearmon
as.Date.yearmon(year2019$Year_Month[1])
a <- year2019$Year_Month[1]
a
as.Date.yearmon(a)
as.date(as.yearmon(a))
as.Date(as.yearmon(a))
as.Date(as.yearmon(year2019$Year_Month))
as.yearmon(a)
sapply(year2019$Year_Month, as.yearmon)
year2019$Year_Month <- sapply(year2019$Year_Month, as.yearmon)
head(year2019$Year_Month)
year2019$Year_Month <- as.Date(year2019$Year_Month)
head(year2019$Year_Month)
year2019 <- rbind(Apr2019, Aug2019, Dec2019, Feb2019, Jan2019, Jul2019, Jun2019, Mar2019, May2019, Nov2019, Oct2019, Sep2019)
head(year2019$Year_Month)
head(year2019$Month)
colnames(year2019) <- c("Metro", "Dimension_Type", "Year_Month", "Dimension", "Measure", "Value", "YoY")
year2019$Metro <- as.factor(year2019$Metro)
year2019$Dimension_Type <- as.factor(year2019$Dimension_Type)
year2019$Measure <- as.factor(year2019$Measure)
head(year2019$Year_Month)
as.yearmon(year2019$Year_Month[1])
year2019$Year_Month[1]
as.Date(as.yearmon(year2019$Year_Month[1]))
year2019$Year_Month[1]
for (i in nrow(year2019)) {
year2019$Year_Month[i] <- as.Date(as.yearmon(year2019$Year_Month[i]))
}
year2019$Year_Month[1]
nrow(year2019)
year2019$Year_Month[2]
year2019$Year_Month[1] <- as.Date(as.yearmon(year2019$Year_Month[1]))
year2019$Year_Month[1]
head(year2019$Year_Month)
year2019$Year_Month[2] <- as.yearmon(year2019$Year_Month[2])
year2019$Year_Month[2]
year2019$Year_Month[2] <- fast_strptime(x = year2019$Year_Month[2], format = "%Y-%m")
year2019$Year_Month[2] <- parse_date_time(year2019$Year_Month[2], "ym")
year2019$Year_Month[2]
year2019$Year_Month[3]
year2019$Year_Month
class(year2019)
year2019 <- rbind(Apr2019, Aug2019, Dec2019, Feb2019, Jan2019, Jul2019, Jun2019, Mar2019, May2019, Nov2019, Oct2019, Sep2019)
colnames(year2019) <- c("Metro", "Dimension_Type", "Year_Month", "Dimension", "Measure", "Value", "YoY")
year2019$Metro <- as.factor(year2019$Metro)
year2019$Dimension_Type <- as.factor(year2019$Dimension_Type)
year2019$Measure <- as.factor(year2019$Measure)
year2019[3,1]
year2019[[3]]
class(year2019)
year2019[[3]][1]
parse_date_time(x = year2019[[3]][1], orders = "ym")
year2019[[3]][1]
year2019[[3]][1] <- parse_date_time(x = year2019[[3]][1], orders = "ym")
year2019[[3]][1]
head(year2019$Year_Month)
parse_date_time(x = year2019[[3]], orders = "ym")
is.na(year2019$Year_Month)
nrow(na.omit(object = year2019))
sum(is.na(year2019))
year2019_na <- year2019[is.na(year2019),]
head(year2019_na,50)
year2019$Measure[is.na(year2019$Measure)]
year2019$Measure[is.na(year2019$Measure),]
head(year2019$Measure[is.na(year2019$Measure)])
as.character(year2019$Measure[is.na(year2019$Measure)])
year2019$Measure[is.na(as.character(year2019$Measure))]
year2019$Value[is.na(year2019$Value)]
rm(year2019_na)
rm(tes, tes_bind)
tes <- year2019
nrow(tes)
tes$Metro <- tes$Metro[!is.na(tes$Metro)]
nrow(tes)
is.na(tes$Metro)
sum(is.na(tes$Metro))
sum(is.na(year2019$Metro))
sum(is.na(tes$Dimension_Type))
sum(is.na(tes$Dimension))
colnames(tes)
sum(is.na(tes$Year_Month))
sum(is.na(tes$Measure))
sum(is.na(tes$Value))
sum(is.na(tes$YoY))
install.packages('openxlsx')
library('openxlsx')
year2019 <- rbind(Apr2019, Aug2019, Dec2019, Feb2019, Jan2019, Jul2019, Jun2019, Mar2019, May2019, Nov2019, Oct2019, Sep2019)
write.xlsx(year2019, "./datasets/year2019.xlsx")
q()
knitr::opts_chunk$set(echo = TRUE)
library('readxl')
library('rvest')
library('lubridate')
library('zoo')
library('openxlsx')
get_xls_file_from_html <- function() {
dataurl <- "https://www.glassdoor.com/research/job-market-report-historical/"
page <- read_html(dataurl)
excels1 <- grep("\\.xlsx", html_nodes(page, "a"), value = T)
excels2 <- gsub(".*href=\"", "", excels1)
excels <- gsub("xlsx.*", "xlsx", excels2)
excels_path <- as.character(sapply(excels,
FUN = substr,
start = 64,
stop = max(sapply(excels, nchar))))
excels_path1_31 <- gsub(".*data-", "", excels_path[1:31])
excels_path[32] <- "2017-05.xlsx"
excels_path[33] <- "2017-04.xlsx"
excels_path[34] <- "2017-03.xlsx"
excels_path[35] <- "2017-02.xlsx"
excels_path[36] <- "2017-01.xlsx"
excels_path[37] <- "2016-12.xlsx"
excels_path[38] <- "2016-11.xlsx"
excels_path[39] <- "2016-10.xlsx"
excels_path <- c(excels_path1_31, excels_path[32:39])
destination <- paste("./datasets/", excels_path, sep = "")
#file extraction
mapply(function(x, y) download.file(x, y, mode="wb"), x = excels, y = destination)
}
load("filespath.RData")
if (!file.exists(filespath)) {
get_xls_file_from_html
}
# check_if_fileexist <- function(){
#     if (!file.exists(filespath)) {
#         get_xls_file_from_html
#     }
# }
# mapply(check_if_fileexist)
source("select_files_to_read.R")
# select_files_to_read("Dec", 2019)
myexport <- function(...) {
arg.list <- list(...)
names <- all.names(match.call())[-1]
for (i in seq_along(names)) assign(names[i],arg.list[[i]],.GlobalEnv)
}
loadMultipleFiles <- function(nmonth = c("Dec"), nyear = c(2019)) {
files_list1 <- list()
year <- 1:length(nyear)
month <- 1:length(nmonth)
totalIterate <<- length(nmonth) * length(nyear)
for (i in year) {
if (length(year) == 1) {
for (j in month) {
select_files_to_read(nmonth[j], nyear)
files_list1[[j]] <- tempfilename
names(files_list1)[j] <- xlsname
}
break
}
for (j in month) {
# browser()
select_files_to_read(nmonth[j], nyear[i])
files_list1[[j]] <- tempfilename
names(files_list1)[j] <- xlsname
# browser()
}
# browser()
}
files_list <<- files_list1
}
loadMultipleFiles(nmonth = c("Dec","Nov","Oct","Sep","Aug","Jul","Jun","May","Apr","Mar","Feb","Jan"))
for (k in 1:totalIterate) {
# browser()
assign(names(files_list)[k], as.data.frame(files_list[[k]]))
# browser()
}
rm(files_list, tempfilename)
head(q())
library(readxl)
a <- read_xlsx("/home/utomoreza/.rstudio-desktop/projects/P4DS_LBB/datasets/2017-04.xlsx")
knitr::opts_chunk$set(echo = TRUE)
head(a)
summary(a)
a
knitr::opts_chunk$set(echo = TRUE)
library('readxl')
library('rvest')
library('lubridate')
knitr::opts_chunk$set(echo = TRUE)
library('readxl')
library('rvest')
library('lubridate')
library('readxl')
library('rvest')
library('lubridate')
version
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
install.packages('swirl')
